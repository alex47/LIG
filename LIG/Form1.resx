<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAww4AAMMOAAAAAQAAAAEAAKlfMwCva0MArGI1ALZ2VADMvrwA3+nuANjg
        5gDi6O4A6fH0ANjf5wCqs8AAmqa2AL/J1QDi7PQAuI96AKVXKwCtYTUArWM2AK9nPQDXysYAx9LfAMjT
        3QDm7PAA7PH1AN/m7QDM1N0ArLXDAJmiswDDzNkAvcXSALOyugCqYz0ArWQ2AK5lNwCwaD4AwcDFAM3U
        3gDS2+MA4efsAMfK2ADDxd8A09rrAKCnvACYobEAqbK/AHJ7jgCIk6UAroFuAK5lOQCwaT0AzqmVANTa
        3gCpsb4Al6G0AJ6ivQDX1/EA5+n6ANvb8wDFw+UAoKDBAICCogBhZoQAeYObAKR4aACxaDwAsGxCANjW
        2QC0u8cApK/BALK40wDc2vcA1dHxANzY9wDa1/cA0s7yAL664wCmoskAmpy/AJiHiACtbUYAsmk8ALJr
        PgCyqK4Af3utALK30QDd3fkAgXaiAG5hjACPgrcAmZO8AMbB6QC2sdgAko21AI6OsQCliYAArWAxALJq
        QAC1cUYAv7S1ANLM8gDPz+wA49/6ALOrvQAoHhUAWklUAKKdywC1tNsAgnqoAFpLdgB0cpkAoXVgAK1i
        NQC0bEAAt3dQAMfM0wDHyd8AycXrAM7C9gDZz/YAs6rCAMC4zQDV1PEAqqfQADAsOgBsXVYAdFRLALBq
        PwCxaDsAtXBEAMOObwDGz90AuMXaAJacuwC0qeUAwLDyAMq/9gDX1fcA4t/6ALiz3gCJgpsAgXaTALB1
        UwC3ckgAt29DALdxRgDEjm0AzNbiAKKswACWpLoAjoq4AJ6U0gCclNEAv7vpAMnC7gC0quIAs63dAKCL
        uwC6elMAvXdNALp0SAC2c0cAzKOJANnh6wC9xtQAytTiAKeqywCYlMMAvrvlALuq5wCQe8UAfXSsAJKF
        tAC3gHAAwIVeAL19VgC8fFQAuXdMAMqjjQDP2eQA6/f7AODs8gC9wd4AvLrfAKWhzQC3sN0Ag3e3AJmE
        owC6h2kAwYFaAMB/VgDAgFYAvoBWALl5UQDBi2oA3OLqAOz3/ADU3ugA2+XxANXW7QC9uN4AnJS9ALmP
        iQDFkGkAxoteAL6BWQC8flUAunxQALp7TwC+f1sAwYVfANTHwADi7fQAx8/eAMnU3wDf5/EAwL3hALCo
        zgDHk3AAyo9nAMaLYwDEh18Av39WALt7UgC5eU8AwoZjAMWLaQDMrJ4AxdDiAM/b6ADU3+cAzNfgAMnQ
        4gDCw+IAv5uWAMOQcwDFjWgAxolhAMKEXADAgFkAxo1uAMiQcgDGk3MAwbrCANTd7QDV3+kAp7LDANTf
        6ADU3O0Aw8DrALKp1gCkmcAAtZCMAMeOZwDEiWUAw4ZiAP///wDv8PHy8/T19vf4+fr7/P3+4OHi4+Tl
        5ufo6err7O3urtDR0tPU1dbX2Nna29zd3t/AwcLDxMXGx8jJysvMzc7PsLGys7S1tre4ubq7vL2+v6Ch
        oqOkpaanqKmqq6ytrq+QkZKTlJWWl5iZmpucnZ6fgIGCg4SFhoeIiYqLjI2Oj3BxcnN0dXZ3eHl6e3x9
        fn9gYWJjZGVmZ2hpamtsbW5vUFFSU1RVVldYWVpbXF1eX0BBQkNERUZHSElKS0xNTk8wMTIzNDU2Nzg5
        Ojs8PT4/ICEiIyQlJicoKSorLC0uLxAREhMUFRYXGBkaGxwdHh8AAQIDBAUGBwgJCgsMDQ4PAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgA
        AAAgAAAAQAAAAAEACAAAAAAAAAQAAMMOAADDDgAAAAEAAAABAACrXjMApVoxAL+JaACtYjUArmU5AK1t
        RQCseWIA5NvZAObx9gDt+PsA6/L1ANnk6gDZ2doA4+z0ANvk7ADL0twAoaa0ALfAzgCstMMAjZmsALzD
        zQDF0NcA3uryAOby+QDJqJcAplgsAMF9WQC2insAxdDcAMHK1QDl6+4AmqK0AKeyxwCJlKgAu8TSALrE
        2ACscUwAsGc6ANSwnQDy9/oA09zkAKapugDKzdsAvKWcALRtQgDXzMkA8fr6AMzV4wCYoKwAlJyvALR+
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>